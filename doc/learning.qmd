---
title: "Reproducible documents"
author: "Sofie"
format: html
---

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
library(NHANES)
nhanes_small <- read_csv(here::here("data/nhanes_small.csv"))
```

```{r}
nhanes_small
```

## Table of results (this is a header)

```{r mean-age-bmi-table}
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  knitr::kable(caption = "Mean values of Age and BMI for education and diabetes status.")
```

## Prettier table


```{r prettier-table}
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    mean_age = round(mean_age, digits = 1),
    mean_bmi = round(mean_bmi, digits = 1),
    education = str_to_sentence(education)
  ) %>%
  rename(
    "Diabetes Status" = diabetes,
    "Education" = education,
    "Mean Age" = mean_age,
    "Mean BMI" = mean_bmi
  ) %>%
  knitr::kable(caption = "Mean values of Age and BMI for each education and diabetes status.")

#| echo: false
```


```{r}
```

Blue female in @fig-blue-female!

![Female](images/SILfemme30.png){#fig-blue-female width="20%" height="20%"}

```{r}
```

## Visualizing data

```{r}
# Create histogram for BMI

ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram()
```

```{r}
# Create histogram for BMI
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram(na.rm = T)
```

```{r}
nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = T)
```
BMI distribution in NHANES dataset was visualised in @fig-bmi-histo.

```{r}
#| fig-cap: "Distribution of BMI."
#| label: fig-bmi-histo

nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = T)
```

```{r}
# Create count barplot for education
ggplot(nhanes_small, aes(x = education)) +
  geom_bar()
```

```{r}
# Create count barplot for diabetes status
ggplot(nhanes_small, aes(x = diabetes)) +
  geom_bar()
```

```{r}
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()
```

```{r}
nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```

```{r}
#| label: fig-diabetes-education
#| fig-cap: "Counts of diabetes and education in NHANES"
#| fig-subcap:
#|   - "Number of those with or without diabetes."
#|   - "Number of those with different educational status."
#| layout-ncol: 2

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()

nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(education)) +
  geom_bar()
```

###Plotting two variables

```{r}
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = T)
```

```{r}
# Add a smoothing line with CI
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = T) +
  geom_smooth(na.rm = T)
```

```{r}
# Two categorical vaiables
nhanes_small %>%
  filter(!is.na(education), !is.na(diabetes)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar()
```

```{r}
# "dodged" barplot

nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar(position = position_dodge())
```

###Plotting continuous and discrete variables

```{r}
# Using mixed data

nhanes_small %>%
  filter(!is.na(diabetes), bmi >= 60) %>%
  ggplot(aes(x = diabetes, y = bmi)) +
  geom_violin(na.rm = T)
```

## Exercise to make plots with one or two variables

```{r}
library(NHANES)
nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)
```

With the nhanes_exercise data, use geom_density() to show the distribution of age (participant’s age at collection) and diabetes_age (age of diabetes diagnosis) in two separate, side-by-side plots, but inside one code chunk. Use #| layout-ncol, along with #| label, #| fig-cap and #| fig-subcap, to have the two plots be side by side. Don’t forget to use na.rm = TRUE in the geom.

```{r}
#| layout-ncol: 2
#| label: "Age at collection and age of DM diagnosis"
#| fig-cap: age-collection-DM-diagnosis
#| fig-subcap: 
#|   - "At at collection"
#|   - "Age at DM diagnosis"


# Distribution of age
ggplot(nhanes_exercise, aes(x = age)) +
    geom_density(na.rm = T)

# Distribution of age at diabetes diagnosis
ggplot(nhanes_exercise, aes(x = diabetes_age)) +
    geom_density(na.rm = T)
```

With nhanes_exercise, use filter() and geom_bar() to find out how many people there who currently smoke (smoke_now) and who are at or above the age or 20. Drop missing values (!is.na()) from smoke_now. What can you say about how many smoke in this age group? Use #| label and #| fig-cap to be able to reference it in the Quarto document and have a caption. Render (Ctrl-Shift-K for “Knit” or Ctrl-Shift-P, then type “render”) the document to make sure it works and to see the output.

```{r}
# Number of people who smoke now and are or above 20 years of age,
# removing those with missing smoking status.
nhanes_exercise %>% 
  filter(age >= 20, !is.na(smoke_now)) %>% 
  ggplot(aes(x = smoke_now)) +
  geom_bar()

#| label: "Smokers at or above 20 years of age"
#| fig-cap: smoke-age-20
```


Mean arterial pressure is a blood pressure measure used to determine the average pressure arteries experience through a typical cardiac cycle. The formula to calculate it is:


Use mutate() to create a new column called mean_arterial_pressure using this formula above. The code template below will help you start out. Then, use geom_hex() and add another layer for geom_smooth() to find out how bmi (on the x-axis) relates to mean_arterial_pressure (on the y-axis). Do you notice anything about the data from the plots?



```{r}
# BMI in relation to mean arterial pressure
nhanes_exercise %>% 
  mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)) / 3) %>% 
  ggplot(aes(x = bmi, y = mean_arterial_pressure)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth()
```

###Plotting three or more variables
```{r}
# Plotting sys BP in relation to education and DM
nhanes_small %>% 
    filter(!is.na(diabetes), !is.na(education)) %>% 
    ggplot(aes(x = education, y = bp_sys_ave, colour = diabetes)) +
    geom_boxplot(na.rm = T)
    
```



```{r}
#Plotting BMI in relation to sys BP and age

nhanes_small %>% 
    ggplot(aes(x = bmi, y = bp_sys_ave, color = age)) + 
    geom_point(na.rm = T)
```



```{r}
#Plot bmi in relation to sys BP and DM status. 

nhanes_small %>% 
    filter(!is.na(diabetes)) %>% 
    ggplot(aes(x = bmi, y = bp_sys_ave, color = diabetes)) +
    geom_point(na.rm = T)
```


```{r}
# split the plot into two rows, using faceting by columns

nhanes_small %>% 
    filter(!is.na(diabetes)) %>% 
    ggplot(aes(x = bmi, y = bp_sys_ave)) +
    geom_point(na.rm = T)+ 
    facet_grid(cols = vars(diabetes))

```

```{r}
nhanes_small %>% 
    filter(!is.na(diabetes)) %>% 
    ggplot(aes(x = bmi, y = bp_sys_ave)) +
    geom_point(na.rm = T)+ 
    facet_grid(rows = vars(diabetes))
```


```{r}
#Plot BMI in relation to sys BP, DM, education and age

nhanes_small %>% 
    filter(!is.na(diabetes), !is.na(education)) %>% 
    ggplot(aes(x = bmi, y = bp_sys_ave, color = age)) +
    geom_point(na.rm = T)+ 
    facet_grid(rows = vars(diabetes),
               cols = vars(education))
```

